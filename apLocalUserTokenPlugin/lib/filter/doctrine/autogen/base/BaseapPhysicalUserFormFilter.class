<?php

/**
 * apPhysicalUser filter form base class.
 *
 * @package    authpuppy
 * @subpackage filter
 * @author     FrÃ©dÃ©ric Sheedy
 * @version    SVN: $Id: sfDoctrineFormFilterGeneratedTemplate.php 24171 2009-11-19 16:37:50Z Kris.Wallsmith $
 */
abstract class BaseapPhysicalUserFormFilter extends BaseFormFilterDoctrine
{
  public function setup()
  {
    $this->setWidgets(array(
      'first_name'        => new sfWidgetFormFilterInput(array('with_empty' => false)),
      'last_name'         => new sfWidgetFormFilterInput(array('with_empty' => false)),
      'birth_date'        => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate())),
      'birth_place'       => new sfWidgetFormFilterInput(),
      'address'           => new sfWidgetFormFilterInput(),
      'city'              => new sfWidgetFormFilterInput(),
      'province'          => new sfWidgetFormFilterInput(),
      'zip'               => new sfWidgetFormFilterInput(),
      'user_status'            => new sfWidgetFormFilterInput(),
      'document_type'     => new sfWidgetFormFilterInput(),
      'document'          => new sfWidgetFormFilterInput(),
      'simple_network_id' => new sfWidgetFormDoctrineChoice(array('model' => $this->getRelatedModelName('apSimpleNetwork'), 'add_empty' => true)),
      'created_at'        => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
      'updated_at'        => new sfWidgetFormFilterDate(array('from_date' => new sfWidgetFormDate(), 'to_date' => new sfWidgetFormDate(), 'with_empty' => false)),
    ));

    $this->setValidators(array(
      'first_name'        => new sfValidatorPass(array('required' => false)),
      'last_name'         => new sfValidatorPass(array('required' => false)),
      'birth_date'        => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
      'birth_place'       => new sfValidatorPass(array('required' => false)),
      'address'           => new sfValidatorPass(array('required' => false)),
      'city'              => new sfValidatorPass(array('required' => false)),
      'province'          => new sfValidatorPass(array('required' => false)),
      'zip'               => new sfValidatorPass(array('required' => false)),
      'user_status'            => new sfValidatorPass(array('required' => false)),
      'document_type'     => new sfValidatorPass(array('required' => false)),
      'document'          => new sfValidatorPass(array('required' => false)),
      'simple_network_id' => new sfValidatorDoctrineChoice(array('required' => false, 'model' => $this->getRelatedModelName('apSimpleNetwork'), 'column' => 'id')),
      'created_at'        => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
      'updated_at'        => new sfValidatorDateRange(array('required' => false, 'from_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 00:00:00')), 'to_date' => new sfValidatorDateTime(array('required' => false, 'datetime_output' => 'Y-m-d 23:59:59')))),
    ));

    $this->widgetSchema->setNameFormat('ap_physical_user_filters[%s]');

    $this->errorSchema = new sfValidatorErrorSchema($this->validatorSchema);

    $this->setupInheritance();

    parent::setup();
  }

  public function getModelName()
  {
    return 'apPhysicalUser';
  }

  public function getFields()
  {
    return array(
      'id'                => 'Number',
      'first_name'        => 'Text',
      'last_name'         => 'Text',
      'birth_date'        => 'Date',
      'birth_place'       => 'Text',
      'address'           => 'Text',
      'city'              => 'Text',
      'province'          => 'Text',
      'zip'               => 'Text',
      'user_status'            => 'Text',
      'document_type'     => 'Text',
      'document'          => 'Text',
      'simple_network_id' => 'ForeignKey',
      'created_at'        => 'Date',
      'updated_at'        => 'Date',
    );
  }
}
