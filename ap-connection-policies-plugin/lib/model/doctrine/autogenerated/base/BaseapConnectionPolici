<?php

// +------------------------------------------------------------------------+
// | AuthPuppy Authentication Server                                        |
// | =============================                                          |
// |                                                                        |
// | AuthPuppy is the new generation of authentication server for           |
// | a wifidog based captive portal suite                                   |
// +------------------------------------------------------------------------+
// | PHP version 5 required.                                                |
// +------------------------------------------------------------------------+
// | Homepage:     http://www.authpuppy.org/                                |
// | Launchpad:    http://www.launchpad.net/authpuppy                       |
// +------------------------------------------------------------------------+
// | This program is free software; you can redistribute it and/or modify   |
// | it under the terms of the GNU General Public License as published by   |
// | the Free Software Foundation; either version 2 of the License, or      |
// | (at your option) any later version.                                    |
// |                                                                        |
// | This program is distributed in the hope that it will be useful,        |
// | but WITHOUT ANY WARRANTY; without even the implied warranty of         |
// | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          |
// | GNU General Public License for more details.                           |
// |                                                                        |
// | You should have received a copy of the GNU General Public License along|
// | with this program; if not, write to the Free Software Foundation, Inc.,|
// | 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.            |
// +------------------------------------------------------------------------+


/**
 * BaseapConnectionPolicies
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $type
 * @property string $scope
 * @property string $auth_type
 * @property string $auth_sub_type
 * @property integer $max_incoming
 * @property integer $max_outgoing
 * @property integer $max_total
 * @property string $max_duration
 * @property string $time_window
 * @property string $expiration
 * @property boolean $identity_and_machine
 * 
 * @method string               getType()                 Returns the current record's "type" value
 * @method string               getScope()                Returns the current record's "scope" value
 * @method string               getAuthType()             Returns the current record's "auth_type" value
 * @method string               getAuthSubType()          Returns the current record's "auth_sub_type" value
 * @method integer              getMaxIncoming()          Returns the current record's "max_incoming" value
 * @method integer              getMaxOutgoing()          Returns the current record's "max_outgoing" value
 * @method integer              getMaxTotal()             Returns the current record's "max_total" value
 * @method string               getMaxDuration()          Returns the current record's "max_duration" value
 * @method string               getTimeWindow()           Returns the current record's "time_window" value
 * @method string               getExpiration()           Returns the current record's "expiration" value
 * @method boolean              getIdentityAndMachine()   Returns the current record's "identity_and_machine" value
 * @method apConnectionPolicies setType()                 Sets the current record's "type" value
 * @method apConnectionPolicies setScope()                Sets the current record's "scope" value
 * @method apConnectionPolicies setAuthType()             Sets the current record's "auth_type" value
 * @method apConnectionPolicies setAuthSubType()          Sets the current record's "auth_sub_type" value
 * @method apConnectionPolicies setMaxIncoming()          Sets the current record's "max_incoming" value
 * @method apConnectionPolicies setMaxOutgoing()          Sets the current record's "max_outgoing" value
 * @method apConnectionPolicies setMaxTotal()             Sets the current record's "max_total" value
 * @method apConnectionPolicies setMaxDuration()          Sets the current record's "max_duration" value
 * @method apConnectionPolicies setTimeWindow()           Sets the current record's "time_window" value
 * @method apConnectionPolicies setExpiration()           Sets the current record's "expiration" value
 * @method apConnectionPolicies setIdentityAndMachine()   Sets the current record's "identity_and_machine" value
 * 
 * @package    apConnectionPoliciesPlugin
 * @author     GeneviÃ¨ve Bastien <gbastien@versatic.net>
 * @copyright  2010
 * @version    $Version: 0.1.2$
 */
abstract class BaseapConnectionPolicies extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ap_connection_policies');
        $this->hasColumn('policy_name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('type', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('scope', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '15',
             ));
        $this->hasColumn('auth_type', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('auth_sub_type', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('max_incoming', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('max_outgoing', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('max_total', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('max_duration', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('time_window', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('expiration', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('identity_and_machine', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('status_message', 'string', 1000, array(
             'type' => 'string',
             'length' => '1000',
             ));
        $this->hasColumn('status_display', 'boolean', null, array(
             'type' => 'boolean',
             ));


        $this->index('unique_policy', array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'type',
              2 => 'scope'
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->hasMany('apApplicablePolicies as AppPolicies', array(
             'local' => 'id',
             'foreign' => 'policy_id'));
        
    }
}